[{"/home/stranavadavid/programming/majkoponist/frontend/src/index.js":"1","/home/stranavadavid/programming/majkoponist/frontend/src/App.js":"2","/home/stranavadavid/programming/majkoponist/frontend/src/reportWebVitals.js":"3","/home/stranavadavid/programming/majkoponist/frontend/src/components/Register.js":"4","/home/stranavadavid/programming/majkoponist/frontend/src/components/RegisterForm.js":"5","/home/stranavadavid/programming/majkoponist/frontend/src/components/EmailExists.js":"6","/home/stranavadavid/programming/majkoponist/frontend/src/components/Questions.js":"7","/home/stranavadavid/programming/majkoponist/frontend/src/components/Question.js":"8","/home/stranavadavid/programming/majkoponist/frontend/src/components/ShowQuestions.js":"9","/home/stranavadavid/programming/majkoponist/frontend/src/components/ShowQuestion.js":"10","/home/stranavadavid/programming/majkoponist/frontend/src/components/ShowResult.js":"11","/home/stranavadavid/programming/majkoponist/frontend/src/components/admin/Admin.js":"12","/home/stranavadavid/programming/majkoponist/frontend/src/components/admin/AdminLogin.js":"13","/home/stranavadavid/programming/majkoponist/frontend/src/components/admin/AdminPage.js":"14","/home/stranavadavid/programming/majkoponist/frontend/src/components/admin/AdminPageQuestions.js":"15","/home/stranavadavid/programming/majkoponist/frontend/src/components/admin/AdminPageQuestion.js":"16","/home/stranavadavid/programming/majkoponist/frontend/src/components/admin/CreateQuestion.js":"17","/home/stranavadavid/programming/majkoponist/frontend/src/components/admin/EditQuestion.js":"18"},{"size":500,"mtime":1610620331104,"results":"19","hashOfConfig":"20"},{"size":1407,"mtime":1610909610065,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1610571547334,"results":"22","hashOfConfig":"20"},{"size":2944,"mtime":1610990935611,"results":"23","hashOfConfig":"20"},{"size":3386,"mtime":1610909959806,"results":"24","hashOfConfig":"20"},{"size":364,"mtime":1610706148923,"results":"25","hashOfConfig":"20"},{"size":3785,"mtime":1610963602264,"results":"26","hashOfConfig":"20"},{"size":2766,"mtime":1610977270331,"results":"27","hashOfConfig":"20"},{"size":422,"mtime":1610888238939,"results":"28","hashOfConfig":"20"},{"size":666,"mtime":1610984349380,"results":"29","hashOfConfig":"20"},{"size":563,"mtime":1610984696347,"results":"30","hashOfConfig":"20"},{"size":1567,"mtime":1610990950720,"results":"31","hashOfConfig":"20"},{"size":2110,"mtime":1610909610739,"results":"32","hashOfConfig":"20"},{"size":2213,"mtime":1610990957860,"results":"33","hashOfConfig":"20"},{"size":591,"mtime":1610912544009,"results":"34","hashOfConfig":"20"},{"size":1145,"mtime":1610976729753,"results":"35","hashOfConfig":"20"},{"size":3907,"mtime":1610975640194,"results":"36","hashOfConfig":"20"},{"size":4568,"mtime":1610975861277,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"11zkt45",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/home/stranavadavid/programming/majkoponist/frontend/src/index.js",[],["78","79"],"/home/stranavadavid/programming/majkoponist/frontend/src/App.js",[],"/home/stranavadavid/programming/majkoponist/frontend/src/reportWebVitals.js",[],"/home/stranavadavid/programming/majkoponist/frontend/src/components/Register.js",[],"/home/stranavadavid/programming/majkoponist/frontend/src/components/RegisterForm.js",["80"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nclass RegisterForm extends Component {\n    state = {\n        email: '',\n        first_name: '',\n        last_name: '',\n        phone: '',\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.registerFunction(this.state.email, this.state.first_name, this.state.last_name, this.state.phone);\n        this.setState({\n            email: '',\n            first_name: '',\n            last_name: '',\n            phone: '',\n        });\n    }\n    \n    onChangeEmail = (e) => this.setState({ [e.target.name]: e.target.value});\n    onChangeFirstName = (e) => this.setState({ [e.target.name]: e.target.value});\n    onChangeLastName = (e) => this.setState({ [e.target.name]: e.target.value});\n    onChangePhone = (e) => this.setState({ [e.target.name]: e.target.value});\n\n    render() {\n        return(\n            <div className=\"centerbox\">\n                <h1>\n                    Register Form\n                </h1>\n                <form onSubmit={this.onSubmit} className=\"form\">\n                    <div className=\"input-line\">\n                        <input\n                        type=\"email\"\n                        name=\"email\"\n                        className=\"text-input\"\n                        placeholder=\"Email\"\n                        value={this.state.email}\n                        onChange={this.onChangeEmail}\n                        required\n                        />\n                    </div>\n                    <div className=\"input-line\">\n                        <input\n                        type=\"text\"\n                        name=\"first_name\"\n                        className=\"text-input\"\n                        placeholder=\"First Name\"\n                        value={this.state.first_name}\n                        onChange={this.onChangeFirstName}\n                        required\n                        />\n                    </div>\n                    <div className=\"input-line\">\n                        <input\n                        type=\"text\"\n                        name=\"last_name\"\n                        className=\"text-input\"\n                        placeholder=\"Last Name\"\n                        value={this.state.last_name}\n                        onChange={this.onChangeLastName}\n                        required\n                        />\n                    </div>\n                    <div className=\"input-line\">\n                        <input\n                        type=\"text\"\n                        name=\"phone\"\n                        className=\"text-input\"\n                        placeholder=\"Your phone number\"\n                        value={this.state.phone}\n                        onChange={this.onChangePhone}\n                        required\n                        />\n                    </div>\n                    <div className=\"input-line\">\n                        <input\n                        type=\"submit\"\n                        name=\"submit\"\n                        className=\"form-submit\"\n                        value=\"Register\"\n                        required\n                        />\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nRegisterForm.propTypes = {\n    registerFunction: PropTypes.func.isRequired,\n}\n\nexport default RegisterForm","/home/stranavadavid/programming/majkoponist/frontend/src/components/EmailExists.js",[],"/home/stranavadavid/programming/majkoponist/frontend/src/components/Questions.js",["81","82","83","84"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Question from './Question';\n\nclass Questions extends Component {\n    constructor() {\n        super();\n        this.state = {display_question: false, question_number: -1, seconds: 10, seconds_to_set: 10, current_question: {question: '', id: '', a1: '', a2: '', a3: '', a4: '', difficulty: ''}, questions: '', answeredQuestions: [],};\n        this.timer = 0;\n        this.startTimer = this.startTimer.bind(this);\n        this.countDown = this.countDown.bind(this);\n        this.answerQuestion = this.answerQuestion.bind(this);\n        this.setQuestion = this.setQuestion.bind(this);\n      }\n      componentDidMount() {\n        this.setState({questions: this.props.questions});\n      }\n\n      setQuestion() {\n        if(this.state.question_number == 19) {\n          clearInterval(this.timer);\n          let quest_number = this.question_number + 1;\n          this.setState({display_question: false, question_number: quest_number});\n          this.props.showResult(this.state.answeredQuestions);\n          console.log(\"Questions were answered\");\n        } else if (this.state.question_number < 19) {\n          this.setState({\n            question_number: this.state.question_number + 1,\n            display_question: true,\n          });\n        }\n      }\n    \n      startTimer() {\n        if (this.timer == 0 && this.state.seconds > 0) {\n          this.setQuestion();\n          this.timer = setInterval(this.countDown, 1000);\n        }\n        else if (this.state.seconds == 0) {\n          this.setQuestion();\n          this.setState({\n            seconds: this.state.seconds_to_set,\n            timer: 0,\n          });\n          this.timer = setInterval(this.countDown, 1000);\n        }\n      }\n\n      answerQuestion(question_id, question_answer) {\n          this.setState({\n              seconds: 0,\n          });\n          let answeredQuestions_list = this.state.answeredQuestions;\n          console.log(answeredQuestions_list);\n          this.setState(state => {\n            const answeredQuestions = state.answeredQuestions.concat({\"id\": question_id, \"answer\": question_answer});\n            return {\n              answeredQuestions,\n              //value: '',\n            };\n          });\n          console.log(\"Question was answered\");\n          console.log(this.state.answeredQuestions);\n          this.startTimer();\n      }\n    \n      countDown() {\n        // Remove one second, set state so a re-render happens.\n        if (this.state.seconds <= 0) {\n            this.startTimer();\n            clearInterval(this.timer);\n        } else {\n            let seconds = this.state.seconds - 1;\n            this.setState({\n              seconds: seconds,\n            });\n            // Check if we're at zero.\n            if (seconds <= 0) {\n              this.setState(state => {\n                const answeredQuestions = state.answeredQuestions.concat({id: this.state.questions[this.state.question_number].id, asnwer: ''});\n                return {\n                  answeredQuestions,\n                };\n              });\n              this.startTimer();\n              clearInterval(this.timer);\n            }\n        }\n      }\n    render() {\n      let component;\n      if (this.state.display_question) {\n        component = <Question question={this.state.questions[this.state.question_number]} onSubmit={this.answerQuestion}/>\n      }\n      return (\n        <div className=\"centerbox\">\n          <button onClick={this.startTimer}>Start</button>\n          s: {this.state.seconds}\n          {component}\n        </div>\n      );\n    }\n}\n\nQuestions.propTypes = {\n    questions: PropTypes.array.isRequired,\n    showResult: PropTypes.func.isRequired,\n}\n\nexport default Questions","/home/stranavadavid/programming/majkoponist/frontend/src/components/Question.js",[],"/home/stranavadavid/programming/majkoponist/frontend/src/components/ShowQuestions.js",[],"/home/stranavadavid/programming/majkoponist/frontend/src/components/ShowQuestion.js",[],"/home/stranavadavid/programming/majkoponist/frontend/src/components/ShowResult.js",["85"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ShowQuestion from './ShowQuestion';\nimport ShowQuestions from './ShowQuestions';\n\nclass ShowResult extends Component {\n    render() {\n        return(\n            <div>\n                <h1>Your result: {this.props.average} correct</h1>\n                <ShowQuestions questions={this.props.questions}/>\n            </div>\n        );\n    }\n}\n\nShowResult.propTypes = {\n    questions: PropTypes.array.isRequired,\n    average: PropTypes.string.isRequired,\n}\n\nexport default ShowResult","/home/stranavadavid/programming/majkoponist/frontend/src/components/admin/Admin.js",[],"/home/stranavadavid/programming/majkoponist/frontend/src/components/admin/AdminLogin.js",[],"/home/stranavadavid/programming/majkoponist/frontend/src/components/admin/AdminPage.js",[],"/home/stranavadavid/programming/majkoponist/frontend/src/components/admin/AdminPageQuestions.js",[],"/home/stranavadavid/programming/majkoponist/frontend/src/components/admin/AdminPageQuestion.js",[],"/home/stranavadavid/programming/majkoponist/frontend/src/components/admin/CreateQuestion.js",[],"/home/stranavadavid/programming/majkoponist/frontend/src/components/admin/EditQuestion.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":13},{"ruleId":"90","severity":1,"message":"91","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":13},{"ruleId":"94","severity":1,"message":"95","line":21,"column":39,"nodeType":"96","messageId":"97","endLine":21,"endColumn":41},{"ruleId":"94","severity":1,"message":"95","line":36,"column":24,"nodeType":"96","messageId":"97","endLine":36,"endColumn":26},{"ruleId":"94","severity":1,"message":"95","line":40,"column":37,"nodeType":"96","messageId":"97","endLine":40,"endColumn":39},{"ruleId":"90","severity":1,"message":"98","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":20},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ShowQuestion' is defined but never used.","no-global-assign","no-unsafe-negation"]