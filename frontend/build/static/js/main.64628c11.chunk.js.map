{"version":3,"sources":["components/assets/GreatWar.mp3","components/assets/GreatWarOgg.ogg","components/RegisterForm.js","components/Question.js","components/PlayScreen.js","components/Questions.js","components/ShowQuestion.js","components/ShowQuestions.js","components/Prize.js","components/ShowPrizes.js","components/Prizes.js","components/SelectPrize.js","components/Config.js","components/ShowResult.js","components/Completed.js","components/Register.js","components/EmailExists.js","components/admin/AdminLogin.js","components/admin/AdminPageQuestion.js","components/admin/AdminPageQuestions.js","components/admin/CreateQuestion.js","components/admin/EditQuestion.js","components/admin/DisplayResult.js","components/admin/DisplayResults.js","components/admin/ShowResultQuestion.js","components/admin/ShowResultQuestions.js","components/admin/ShowResult.js","components/admin/CreatePrize.js","components/admin/DisplayPrize.js","components/admin/DisplayPrizes.js","components/admin/EditPrize.js","components/admin/AdminPage.js","components/admin/Admin.js","App.js","reportWebVitals.js","index.js"],"names":["RegisterForm","state","email","first_name","last_name","phone","onSubmit","e","preventDefault","props","registerFunction","setState","onChangeValue","target","name","value","className","this","type","placeholder","onChange","required","Component","Question","question","id","difficulty","time_left","question_number","a1","onClick","a2","a3","a4","PlayScreen","showResult","answered","playButton","Questions","timer","display_question","seconds","seconds_to_set","current_question","questions","answeredQuestions","setQuestion","clearInterval","quest_number","startTimer","setInterval","countDown","answerQuestion","question_id","question_answer","answeredQuestion","concat","answer","component","ShowQuestion","user_answer","correct_answer","correct","ShowQuestions","map","Prize","onSelectPrize","onSelect","prize","description","ShowPrizes","prizes","Prizes","SelectPrize","information","onChangeInformation","Config","token","ShowResult","component_main","show_prizes","text","select_prize","select_prize_id","select_prize_obj","showPrizes","onSubmitPrize","info","axios","post","prize_name","user","average","answers","phone_number","afterPriceSelect","winner","get","params","then","res","data","tries","playAgain","Completed","Register","res_answers","res_average","register_form","show_error_text","error_text","show_result","show_result_component","price_selected","user_email","user_phone_number","message","window","location","replace","questions_answered","scheme","component_to_show","EmailExists","href","AdminLogin","password","loginFunction","onChangeEmail","onChangePassword","AdminPageQuestion","onEdit","bind","onDelete","AdminPageQuestions","CreateQuestion","createQuestion","onChangeQuestion","for","onChangeAnswer","EditQuestion","editQuestion","onClose","DisplayResult","DisplayResults","ShowResultQuestion","ShowResultQuestions","questionsComponent","questions1","score","score1","questions2","score2","questions3","score3","CreatePrize","prize_information","createPrize","DisplayPrize","DisplayPrizes","EditPrize","editPrize","AdminPage","errorMessage","editComponent","showResultComponent","showResults","showQuestions","showCreateQuestion","showCreatePrize","addQuestion","addPrize","put","onEditQuestion","onCloseEdit","onEditPrize","patch","console","log","onDeletePrize","prize_id","delete","onDeleteQuestion","Admin","loggedIn","res_questions","res_answered","res_prizes","updateState","login","App","playAudio","audio","document","getElementById","paused","play","pause","exact","path","render","Fragment","loop","src","GreatWar","GreatWarOgg","icon","faVolumeUp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.64628c11.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/GreatWar.dc2df2df.mp3\";","export default __webpack_public_path__ + \"static/media/GreatWarOgg.24be363a.ogg\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass RegisterForm extends Component {\n    state = {\n        email: '',\n        first_name: '',\n        last_name: '',\n        phone: '',\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.registerFunction(this.state.email, this.state.first_name, this.state.last_name, this.state.phone);\n        this.setState({\n            email: '',\n            first_name: '',\n            last_name: '',\n            phone: '',\n        });\n    }\n    \n    onChangeValue = (e) => this.setState({ [e.target.name]: e.target.value});\n    //onChangeFirstName = (e) => this.setState({ [e.target.name]: e.target.value});\n    //onChangeLastName = (e) => this.setState({ [e.target.name]: e.target.value});\n    //onChangePhone = (e) => this.setState({ [e.target.name]: e.target.value});\n\n    render() {\n        return(\n            <div className=\"columns-container\">\n                <div className=\"column-container\">\n                    <h1 className=\"medium-heading\">Pravidla a postup hry</h1>\n                    <ul className=\"rules-list\">\n                        <li>Kvíz obsahuje 20 otázek, 5 otázek z každé obtížnosti. Na každou otázku máte 15s</li>\n                        <li>Po zodpovězení otázek se vám zobrazí váš výsledek a správné odpovědi</li>\n                        <li>Pokud odpovíte správně na více než 90% otázek, budete si moc vybrat vaší výhru</li>\n                        <li>Zadejte prave osobni udaji, pro moznou budouci komunikaci ohledne vyhry</li>\n                        <li>Další pravidlo</li>\n                        <li>Další pravidlo</li>\n                        <li>Další pravidlo</li>\n                    </ul>\n                </div>\n                <div className=\"column-container\">\n                    <h1 className=\"medium-heading\">Registrace</h1>\n                    <form onSubmit={this.onSubmit} className=\"form\">\n                        <div className=\"input-line\">\n                            <input\n                            type=\"email\"\n                            name=\"email\"\n                            className=\"text-input\"\n                            placeholder=\"Váš Email\"\n                            value={this.state.email}\n                            onChange={this.onChangeValue}\n                            required\n                            />\n                        </div>\n                        <div className=\"input-line\">\n                            <input\n                            type=\"text\"\n                            name=\"first_name\"\n                            className=\"text-input\"\n                            placeholder=\"Křestní jméno\"\n                            value={this.state.first_name}\n                            onChange={this.onChangeValue}\n                            required\n                            />\n                        </div>\n                        <div className=\"input-line\">\n                            <input\n                            type=\"text\"\n                            name=\"last_name\"\n                            className=\"text-input\"\n                            placeholder=\"Příjmení\"\n                            value={this.state.last_name}\n                            onChange={this.onChangeValue}\n                            required\n                            />\n                        </div>\n                        <div className=\"input-line\">\n                            <input\n                            type=\"text\"\n                            name=\"phone\"\n                            className=\"text-input\"\n                            placeholder=\"Vaše telefoné číslo\"\n                            value={this.state.phone}\n                            onChange={this.onChangeValue}\n                            required\n                            />\n                        </div>\n                        <div className=\"input-line\">\n                            <input\n                            type=\"submit\"\n                            name=\"submit\"\n                            className=\"medium-button\"\n                            value=\"Hrát\"\n                            required\n                            />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nRegisterForm.propTypes = {\n    registerFunction: PropTypes.func.isRequired,\n}\n\nexport default RegisterForm","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Question extends Component {\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.onSubmit(this.props.question.id, e.target.value);\n    }\n\n    render() {\n        return(\n            <div className=\"question\">\n                <div className=\"form\">\n                    <div className=\"question-top-bar\">\n                        <div className=\"question-top-bar-part\">\n                            <p className=\"small-text\">Obtiznost {this.props.question.difficulty}</p>\n                        </div>\n                        <div className=\"question-top-bar-part\">\n                            <p className=\"small-text\">Zbyvajici cas {this.props.time_left}/30</p>\n                            <p className=\"small-text\">Otazka {this.props.question_number} z 21</p>\n                        </div>\n                    </div>\n                    <h1 className=\"medium-heading\">{this.props.question.question}</h1>\n                    <div className=\"vertical-container\">\n                        <button className=\"question-button\" value={this.props.question.a1} onClick={this.onSubmit}>\n                            {this.props.question.a1}\n                        </button>\n                        <button className=\"question-button\" value={this.props.question.a2} onClick={this.onSubmit}>\n                            {this.props.question.a2}\n                        </button>\n                        <button className=\"question-button\" value={this.props.question.a3} onClick={this.onSubmit}>\n                            {this.props.question.a3}\n                        </button>\n                        <button className=\"question-button\" value={this.props.question.a4} onClick={this.onSubmit}>\n                            {this.props.question.a4}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nQuestion.propTypes = {\n    question: PropTypes.object.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    question_number: PropTypes.number.isRequired,\n    time_left: PropTypes.number.isRequired\n};\n\nexport default Question;\n\n/* \n<div className=\"radio-group\">\n                            <input className=\"radio-button\" type=\"radio\" id=\"answer\" name=\"answer\" value={this.props.question.a1} checked={this.state.answer === this.props.question.a1} onChange={this.onChangeAnswer}/>\n                            <label for={this.props.question.a1}>{this.props.question.a1}</label>\n                        </div>\n                        <div className=\"radio-group\">\n                            <input className=\"radio-button\" type=\"radio\" id=\"answer\" name=\"answer\" value={this.props.question.a2} checked={this.state.answer === this.props.question.a2} onChange={this.onChangeAnswer}/>\n                            <label for={this.props.question.a2}>{this.props.question.a2}</label>\n                        </div>\n                        <div className=\"radio-group\">\n                            <input className=\"radio-button\" type=\"radio\" id=\"answer\" name=\"answer\" value={this.props.question.a3} checked={this.state.answer === this.props.question.a3} onChange={this.onChangeAnswer}/>\n                            <label for={this.props.question.a3}>{this.props.question.a3}</label>\n                        </div>\n                        <div className=\"radio-group\">\n                            <input className=\"radio-button\" type=\"radio\" id=\"answer\" name=\"answer\" value={this.props.question.a4} checked={this.state.answer === this.props.question.a4} onChange={this.onChangeAnswer}/>\n                            <label for={this.props.question.a4}>{this.props.question.a4}</label>\n                        </div>\n*/","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass PlayScreen extends Component {\n    showResult = () => {\n        this.props.showResult(this.props.answered);\n    }\n\n    render() {\n        return(\n            <div className=\"container-center\">\n                <h2 className=\"medium-heading\">Zacit kviz</h2>\n                <p className=\"medium-text\">Ve kvizu je 21 otazkem, pricemz na kazdou otazku mate 30s. Kazda otazka ma 4 odpovedi, z toho pouze jedna je spravna</p>\n                <button className=\"large-button\" onClick={this.props.playButton}>Hrat!</button>\n            </div>\n        );\n    }\n}\n\nPlayScreen.propTypes = {\n    playButton: PropTypes.func.isRequired\n};\n\nexport default PlayScreen;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Question from './Question';\nimport PlayScreen from './PlayScreen';\n\nclass Questions extends Component {\n    state = {timer: 0, display_question: false, question_number: -1, seconds: 30, seconds_to_set: 30, current_question: {question: '', id: '', a1: '', a2: '', a3: '', a4: '', difficulty: ''}, questions: '', answeredQuestions: [],};\n    \n      componentDidMount() {\n        this.setState({questions: this.props.questions});\n      }\n\n      setQuestion = () => {\n        if(this.state.question_number === 20) {\n          clearInterval(this.state.timer);\n          let quest_number = this.question_number + 1;\n          this.setState({display_question: false, question_number: quest_number});\n          this.props.showResult(this.state.answeredQuestions);\n        } else if (this.state.question_number < 20) {\n          this.setState({\n            question_number: this.state.question_number + 1,\n            display_question: true,\n          });\n        }\n      }\n    \n      startTimer = () => {\n        if (this.state.timer === 0 && this.state.seconds > 0) {\n          this.setQuestion();\n          this.setState({timer: setInterval(this.countDown, 1000)});\n        }\n        else if (this.state.seconds === 0) {\n          this.setQuestion();\n          this.setState({\n            seconds: this.state.seconds_to_set,\n            timer: 0,\n          });\n          this.setState({timer: setInterval(this.countDown, 1000)})\n        }\n      }\n\n      answerQuestion = (question_id, question_answer) => {\n          //this.setState({\n              //seconds: 0,\n          //});\n          this.setState({\n            answeredQuestions: this.state.answeredQuestion.concat({id: question_id, answer: question_answer}),\n            seconds: 0\n          });\n          //this.setState(state => {\n            //const answeredQuestions = this.state.answeredQuestions.concat({\"id\": question_id, \"answer\": question_answer});\n            //return answeredQuestion;\n          //});\n          this.startTimer();\n      }\n    \n      countDown = () => {\n        // Remove one second, set state so a re-render happens.\n        if (this.state.seconds <= 0) {\n            this.startTimer();\n            clearInterval(this.state.timer);\n        } else {\n            let seconds = this.state.seconds - 1;\n            this.setState({\n              seconds: seconds,\n            });\n            // Check if we're at zero.\n            if (seconds <= 0) {\n              //this.setState(state => {\n                //const answeredQuestions = state.answeredQuestions.concat({id: this.state.questions[this.state.question_number].id, answer: ''});\n                //return {\n                  //answeredQuestions,\n                //};\n              //});\n              this.setState({\n                answeredQuestions: this.state.answeredQuestions.concat({id: this.state.questions[this.state.question_number].id, answer: ''})\n              });\n              \n              this.startTimer();\n              clearInterval(this.state.timer);\n            }\n        }\n      }\n    render() {\n      let component;\n      if (this.state.display_question) {\n        component = <Question question={this.state.questions[this.state.question_number]} question_number={this.state.question_number + 1} onSubmit={this.answerQuestion} time_left={this.state.seconds}/>\n      } else {\n        component = <PlayScreen playButton={this.startTimer}/>;\n      }\n      return (\n        <div className=\"centerbox\">\n          {component}\n        </div>\n      );\n    }\n}\n\nQuestions.propTypes = {\n    questions: PropTypes.array.isRequired,\n    showResult: PropTypes.func.isRequired,\n}\n\nexport default Questions","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ShowQuestion extends Component {\n    state = {\n        user_answer: \"\",\n    }\n\n    componentDidMount() {\n        if (this.props.question.user_answer === ''){\n            this.setState({user_answer: \"Ziadna odpoved\"});\n        } else {\n            this.setState({user_answer: this.props.question.user_answer})\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"show-result-question\">\n                <p className=\"small-text\">Obtiznost: {this.props.question.difficulty}</p>\n                <h2 className=\"show-result-question-heading\">{this.props.question.question}</h2>\n                <p className=\"small-text\">Vase odpoved: {this.state.user_answer}</p>\n                <p className=\"small-text\">Spravna odpoved: {this.props.question.correct_answer}</p>\n                <p className=\"medium-text\">Spravne: {this.props.question.correct}</p>\n            </div>\n        );\n    }\n}\n\nShowQuestion.propTypes = {\n    questions: PropTypes.object,\n}\n\nexport default ShowQuestion","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ShowQuestion from './ShowQuestion';\n\nclass ShowQuestions extends Component {\n    render() {\n        return this.props.questions.map((question) => (\n            <ShowQuestion question={question} key={question.id}/>\n        ));\n    }\n}\n\nShowQuestions.propTypes = {\n    questions: PropTypes.array,\n}\n\nexport default ShowQuestions","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Prize extends Component {\n    onSelectPrize = () => {\n        this.props.onSelect(this.props.prize);\n    }\n\n    render() {\n        return(\n            <div className=\"question\">\n                <h2 className=\"medium-heading\">{this.props.prize.name}</h2>\n                <p className=\"medium-text\">Obtiznost: {this.props.prize.description}</p>\n                <button className=\"large-button\" onClick={this.onSelectPrize}>Vybrat tuto vyhru</button>\n            </div>\n        );\n    }\n}\n\nPrize.propTypes = {\n    prize: PropTypes.object.isRequired,\n    onSelect: PropTypes.func.isRequired\n}\n\nexport default Prize;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Prize from './Prize';\n\nclass ShowPrizes extends Component {\n    render() {\n        return this.props.prizes.map((prize) => (\n            <Prize prize={prize} key={prize.id} onSelect={this.props.onSelect}/>\n        ));\n    }\n}\n\nShowPrizes.propTypes = {\n    prizes: PropTypes.array.isRequired,\n    onSelect: PropTypes.func.isRequired,\n}\n\nexport default ShowPrizes","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ShowPrizes from './ShowPrizes';\n\nclass Prizes extends Component {\n    render() {\n        return(\n            <ShowPrizes prizes={this.props.prizes} onSelect={this.props.onSelect}/>\n        );\n    }\n}\n\nPrizes.propTypes = {\n    prizes: PropTypes.array.isRequired,\n    onSelect: PropTypes.func.isRequired,\n}\n\nexport default Prizes","import React, { Component} from 'react';\nimport PropTypes from 'prop-types';\n\nclass SelectPrize extends Component {\n    state = {\n        information: '',\n    }\n\n    onChangeInformation = (e) => this.setState({ information: e.target.value});\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.onSubmit(this.props.prize.name, this.state.information);\n        this.setState({information: '',});\n    }\n\n    render() {\n        return(\n            <form onSubmit={this.onSubmit} className=\"form\">\n                <h2 className=\"small-heading\">{this.props.prize.name}</h2>\n                <p className=\"medium-text\">{this.props.prize.description}</p>\n                <textarea type=\"text\" placeholder=\"Sem napiste veskere poznamky jako idealni termin a adresi\" className=\"textarea\" value={this.state.information} onChange={this.onChangeInformation}/>\n                <input type=\"submit\" value=\"Odoslat\" className=\"medium-button\"/>\n            </form>\n        );\n    }\n}\n\nSelectPrize.propTypes = {\n    prize: PropTypes.object.isRequired,\n    onSubmit: PropTypes.func.isRequired\n}\n\nexport default SelectPrize;","const Config = {\n    token: 'ts9pFkGuXKgcmo43Mmj0^eG%iiR3m',\n}\nexport default Config;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ShowQuestions from './ShowQuestions';\nimport Prizes from './Prizes';\nimport axios from 'axios';\nimport SelectPrize from './SelectPrize';\nimport Config from './Config';\n\nclass ShowResult extends Component {\n    state = {\n        component_main: '',\n        show_prizes: false,\n        token: Config.text,\n        prizes: '',\n        select_prize: false,\n        select_prize_id: '',\n    };\n\n    onSelectPrize = (prize) => {\n        this.setState({\n            select_prize_obj: prize,\n            select_prize: true,\n        });\n    }\n\n    showPrizes = () => {\n        this.setState({\n            show_prizes: true,\n        });\n    }\n\n    onSubmitPrize = (name, info) => {\n        axios.post(\"http://192.46.233.86:5000/prizes\", {\n            token: this.state.token,\n            prize_name: name,\n            email: this.props.user.email,\n            first_name: this.props.user.first_name,\n            last_name: this.props.user.last_name,\n            information: info,\n            average: this.props.average,\n            answers: this.props.questions,\n            phone_number: this.props.user.phone_number,\n        });\n        this.props.afterPriceSelect();\n    }\n\n    componentDidMount() {\n        if (this.props.winner === \"true\") {\n            axios.get(\"http://192.46.233.86:5000/prizes\", {params: {token: this.state.token}})\n                .then((res) => {\n                    this.setState({\n                        prizes: res.data.prizes,\n                    });\n                })\n        }\n    }\n\n    render() {\n        let component;\n        let component_main;\n        if (this.state.select_prize === true){\n            component_main = <SelectPrize prize={this.state.select_prize_obj} onSubmit={this.onSubmitPrize} />\n        } else {\n            if (this.state.show_prizes === true) {\n                component_main =  <Prizes onSelect={this.onSelectPrize} prizes={this.state.prizes}/>;\n            } else {\n                component_main = <ShowQuestions questions={this.props.questions}/>\n                if (this.props.winner === \"true\") {\n                    component = <button onClick={this.showPrizes} className=\"large-button\">Zobrazit vyhry</button>\n                } else if (this.props.tries <= 2) {\n                    component = <button onClick={this.props.playAgain} className=\"large-button\">Hrat jeste raz</button>\n                } else {\n                    component = <h2 className=\"error-text\">Uz nemate dalsi pokusy na kviz</h2>\n                }\n            }\n        }\n        return(\n            <div className=\"container\">\n                <h1 className=\"medium-heading\">Vas vysledek: {this.props.average} spravne</h1>\n                {component}\n                {component_main}\n            </div>\n        );\n    }\n}\n\nShowResult.propTypes = {\n    questions: PropTypes.array.isRequired,\n    average: PropTypes.string.isRequired,\n    winner: PropTypes.string.isRequired,\n    playAgain: PropTypes.func.isRequired,\n    tries: PropTypes.number.isRequired,\n    user: PropTypes.object.isRequired,\n    afterPriceSelect: PropTypes.func.isRequired,\n}\n\nexport default ShowResult;","import React, { Component } from 'react';\n\nclass Completed extends Component {\n    render() {\n        return(\n            <div className=\"question\">\n                <h2 className=\"medium-heading\">Dokoncili jste kviz</h2>\n                <p className=\"medium-text\">Ohledne vyhry vam napiseme na email, ktery jste zadali</p>\n            </div>\n        );\n    }\n}\n\nexport default Completed;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport RegisterForm from './RegisterForm';\nimport Questions from './Questions';\nimport ShowResult from './ShowResult';\nimport Completed from './Completed';\nimport Config from './Config';\n\nclass Register extends Component {\n    state = {\n        token: Config.token,\n        res_answers: '',\n        res_average: '',\n        register_form: true,\n        show_error_text: false,\n        error_text: '',\n        show_result: false,\n        user: '',\n        show_result_component: '',\n        tries: 0,\n        price_selected: false,\n        res: ''\n    };\n\n    componentDidMount() {\n        axios.get(\"http://192.46.233.86:5000/questions\", {params: {token: this.state.token}})\n            .then(res => {\n                this.setState({res: res.data.questions});\n            });\n    }\n\n    registerFunction = (email, first_name, last_name, phone) => {\n        axios.post(\"http://192.46.233.86:5000/users\", {user_email: email, first_name: first_name, last_name: last_name, user_phone_number: phone, token: this.state.token})\n            .then((res) => {\n                if (res.data.message === \"This email already exist\") {\n                    this.setState({\n                        show_error_text: true,\n                        error_text: \"This email already exists\"\n                    });\n                    window.location.replace(\"/email_exists\")\n                } else {\n                    this.setState({\n                        register_form: false,\n                        user: res.data\n                    });\n                }\n            });\n    }\n\n    showResult = (questions_answered) => {\n        axios.post(\"http://192.46.233.86:5000/questions\", {answers: questions_answered, token: this.state.token, email: this.state.user.email, name: this.state.user.first_name + \" \" + this.state.user.last_name, phone_number: this.state.user.phone_number})\n            .then(res => {\n                this.setState({show_result_component: <ShowResult user={this.state.user} winner={res.data.winner} questions={res.data.scheme} average={res.data.average} playAgain={this.playAgain} tries={this.state.tries} afterPriceSelect={this.afterPriceSelect}/>, show_result: true});\n            });\n    }\n\n    afterPriceSelect = () => {\n        this.setState({price_selected: true, register_form: false, show_result: false});\n    }\n\n    playAgain = () => {\n        axios.get(\"http://192.46.233.86:5000/questions\", {params: {token: this.state.token}})\n            .then(res => {\n                this.setState({res: res.data.questions, tries: this.state.tries + 1, register_form: false, show_result: false, price_selected: false});\n            });\n    }\n\n    render() {\n        let component_to_show;\n        if (this.state.register_form === true) {\n            component_to_show = <RegisterForm registerFunction={this.registerFunction}/>;\n        } else if (this.state.show_result === true) {\n            component_to_show = this.state.show_result_component;\n        } else if (this.state.price_selected === true) {\n            component_to_show = <Completed/>;\n        } else {\n            component_to_show = <Questions questions={this.state.res} showResult={this.showResult}/>;\n        }\n        return (\n            <div className=\"container\">\n                {component_to_show}\n            </div>\n        );\n        \n    }\n}\n\nexport default Register;","import React, { Component } from 'react';\n\nclass EmailExists extends Component {\n    render() {\n        return (\n            <div className=\"container-center\">\n                <h1 className=\"medium-heading\">Email alerady exists</h1>\n                <a href=\"/quiz\" className=\"medium-button\">Register again</a>\n            </div>\n        );\n    }\n}\n\nexport default EmailExists;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AdminLogin extends Component {\n    state = {\n        email: '',\n        password: '',\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.loginFunction(this.state.email, this.state.password);\n        this.setState({\n            email: '',\n            password: ''\n        });\n    }\n    \n    onChangeEmail = (e) => this.setState({ [e.target.name]: e.target.value});\n    onChangePassword = (e) => this.setState({ [e.target.name]: e.target.value});\n\n    render() {\n        return(\n            <div className=\"container-center\">\n                <h1 className=\"medium-heading\">Login</h1>\n                <form onSubmit={this.onSubmit} className=\"form\">\n                    <div className=\"input-line\">\n                        <input\n                        type=\"email\"\n                        name=\"email\"\n                        className=\"text-input\"\n                        placeholder=\"Email\"\n                        value={this.state.email}\n                        onChange={this.onChangeEmail}\n                        required\n                        />\n                    </div>\n                    <div className=\"input-line\">\n                        <input\n                        type=\"password\"\n                        name=\"password\"\n                        className=\"text-input\"\n                        placeholder=\"Password\"\n                        value={this.state.password}\n                        onChange={this.onChangePassword}\n                        required\n                        />\n                    </div>\n                    <div className=\"input-line\">\n                        <input\n                        type=\"submit\"\n                        name=\"submit\"\n                        className=\"medium-button\"\n                        value=\"Register\"\n                        required\n                        />\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nAdminLogin.propTypes = {\n    loginFunction: PropTypes.func.isRequired,\n}\n\nexport default AdminLogin;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AdminPageQuestion extends Component {\n    render() {\n        return(\n            <div className=\"question\">\n                <h2 className=\"medium-heading\">{this.props.question.question}</h2>\n                <p className=\"medium-text\">Difficulty: {this.props.question.difficulty}</p>\n                <ul className=\"rules-list\">\n                    <li>Correct Answer: {this.props.question.correct_answer}</li>\n                    <li>Answer 2: {this.props.question.a2}</li>\n                    <li>Answer 3: {this.props.question.a3}</li>\n                    <li>Answer 4: {this.props.question.a4}</li>\n                </ul>\n                <button className=\"small-button\" onClick={this.props.onEdit.bind(this, this.props.question)}>Edit</button>\n                <button className=\"small-button\" onClick={this.props.onDelete.bind(this, this.props.question.id)}>Delete</button>\n            </div>\n        );\n    }\n}\n\nAdminPageQuestion.propTypes = {\n    question: PropTypes.object.isRequired,\n    onEdit: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n}\n\nexport default AdminPageQuestion;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AdminPageQuestion from './AdminPageQuestion';\n\nclass AdminPageQuestions extends Component {\n    render() {\n        return this.props.questions.map((question) => (\n            <AdminPageQuestion question={question} key={question.id} onEdit={this.props.onEdit} onDelete={this.props.onDelete}/>\n        ));\n    }\n}\n\nAdminPageQuestions.propTypes = {\n    questions: PropTypes.array.isRequired,\n    onEdit: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n}\n\nexport default AdminPageQuestions;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass CreateQuestion extends Component {\n    state = {\n        question: '',\n        difficulty: 1,\n        correct_answer: '',\n        a2: '',\n        a3: '',\n        a4: ''\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.createQuestion(this.state.question, this.state.difficulty, this.state.correct_answer, this.state.a2, this.state.a3, this.state.a4);\n        this.setState({\n            question: '',\n            difficulty: 1,\n            correct_answer: '',\n            a2: '',\n            a3: '',\n            a4: ''\n        });\n    }\n    \n    onChangeValue = (e) => this.setState({ [e.target.name]: e.target.value});\n    onChangeQuestion = (e) => {\n        let value;\n        value = e.target.value.replace(/\"/g, \"'\")\n        this.setState({ [e.target.name]: value});\n    }\n    render() {\n        return(\n            <div className=\"container\">\n                <form className=\"form\" onSubmit={this.onSubmit}>\n                    <h1 className=\"medium-heading\">Create Question</h1>\n                    <div className=\"input-line\">\n                        <textarea\n                        type=\"text\"\n                        name=\"question\"\n                        className=\"text-input\"\n                        placeholder=\"Question\"\n                        value={this.state.question}\n                        onChange={this.onChangeQuestion}\n                        required\n                        />\n                    </div>\n                    <h3 className=\"small-heading\">Difficulty</h3>\n                    <div className=\"radios\">\n                        <div className=\"radio-group\">\n                            <input className=\"radio\" type=\"radio\" id=\"1\" name=\"difficulty\" value=\"1\" onChange={this.onChangeValue}/>\n                            <label for=\"1\">1</label>\n                        </div>\n                        <div className=\"radio-group\">\n                            <input className=\"radio\" type=\"radio\" id=\"2\" name=\"difficulty\" value=\"2\" onChange={this.onChangeValue}/>\n                            <label for=\"2\">2</label>\n                        </div>\n                        <div className=\"radio-group\">\n                            <input className=\"radio\" type=\"radio\" id=\"3\" name=\"difficulty\" value=\"3\" onChange={this.onChangeValue}/>\n                            <label for=\"3\">3</label>\n                        </div>\n                    </div>\n                    <div className=\"answers\">\n                        <textarea type=\"text\" placeholder=\"Correct answer\" className=\"textarea-half\" id=\"correct_answer\" name=\"correct_answer\" value={this.state.correct_answer} onChange={this.onChangeAnswer}/>\n                        <textarea type=\"text\" placeholder=\"Answer 2\" className=\"textarea-half\" id=\"a2\" name=\"a2\" value={this.state.a2} onChange={this.onChangeValue}/>\n                        <textarea type=\"text\" placeholder=\"Answer 3\" className=\"textarea-half\" id=\"a3\" name=\"a3\" value={this.state.a3} onChange={this.onChangeValue}/>\n                        <textarea type=\"text\" placeholder=\"Answer 4\" className=\"textarea-half\" id=\"a4\" name=\"a4\" value={this.state.a4} onChange={this.onChangeValue}/>\n                    </div>\n                    <input\n                        type=\"submit\"\n                        name=\"submit\"\n                        className=\"medium-button\"\n                        value=\"Answer\"\n                        required\n                    />\n                </form>\n            </div>\n        );\n    }\n}\n\nCreateQuestion.propTypes = {\n    createQuestion: PropTypes.func.isRequired,\n}\n\nexport default CreateQuestion;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditQuestion extends Component {\n    state = {\n        question: '',\n        difficulty: 1,\n        correct_answer: '',\n        a2: '',\n        a3: '',\n        a4: ''\n    }\n\n    componentDidMount() {\n        let question = this.props.question;\n        this.setState({\n            question: question.question,\n            difficulty: question.difficulty,\n            correct_answer: question.correct_answer,\n            a2: question.a2,\n            a3: question.a3,\n            a4: question.a4\n        });\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.editQuestion(this.state.question, this.state.difficulty, this.state.correct_answer, this.state.a2, this.state.a3, this.state.a4, this.props.question.id);\n        this.setState({\n            question: '',\n            difficulty: 1,\n            correct_answer: '',\n            a2: '',\n            a3: '',\n            a4: ''\n        });\n    }\n    \n    onChangeValue = (e) => this.setState({ [e.target.name]: e.target.value});\n    onChangeQuestion = (e) => {\n        let value;\n        value = e.target.value.replace(/\"/g, \"'\")\n        this.setState({ [e.target.name]: value});\n    }\n\n    render() {\n        return(\n            <div className=\"container-overlay\">\n                <div className=\"close-button\" onClick={this.props.onClose}>\n                    <div className=\"close-button-line1\"/>\n                    <div className=\"close-button-line2\"/>\n                </div>\n                <form className=\"form\" onSubmit={this.onSubmit}>\n                    <h1>Edit Question Question</h1>\n                    <div className=\"input-line\">\n                        <textarea\n                        type=\"text\"\n                        name=\"question\"\n                        className=\"text-input\"\n                        placeholder=\"Question\"\n                        value={this.state.question}\n                        onChange={this.onChangeQuestion}\n                        required\n                        />\n                    </div>\n                    <h3>Obtiznost</h3>\n                    <div className=\"horizontal-container\">\n                        <div className=\"radio-group\">\n                            <input className=\"raido-button\" type=\"radio\" id=\"1\" name=\"difficulty\" value=\"1\" onChange={this.onChangeValue}/>\n                            <label for=\"1\">1</label>\n                        </div>\n                        <div className=\"radio-group\">\n                            <input className=\"raido-button\" type=\"radio\" id=\"2\" name=\"difficulty\" value=\"2\" onChange={this.onChangeValue}/>\n                            <label for=\"2\">2</label>\n                        </div>\n                        <div className=\"radio-group\">\n                            <input className=\"raido-button\" type=\"radio\" id=\"3\" name=\"difficulty\" value=\"3\" onChange={this.onChangeValue}/>\n                            <label for=\"3\">3</label>\n                        </div>\n                    </div>\n                    <div className=\"answers\">\n                        <textarea type=\"text\" placeholder=\"Correct answer\" className=\"textarea\" id=\"correct_answer\" name=\"correct_answer\" value={this.state.correct_answer} onChange={this.onChangeValue}/>\n                        <textarea type=\"text\" placeholder=\"Answer 2\" className=\"textarea\" id=\"a2\" name=\"a2\" value={this.state.a2} onChange={this.onChangeValue}/>\n                        <textarea type=\"text\" placeholder=\"Answer 3\" className=\"textarea\" id=\"a3\" name=\"a3\" value={this.state.a3} onChange={this.onChangeValue}/>\n                        <textarea type=\"text\" placeholder=\"Answer 4\" className=\"textarea\" id=\"a4\" name=\"a4\" value={this.state.a4} onChange={this.onChangeValue}/>\n                    </div>\n                    <input\n                        type=\"submit\"\n                        name=\"submit\"\n                        className=\"medium-button\"\n                        value=\"Answer\"\n                        required\n                    />\n                </form>\n            </div>\n        );\n    }\n}\n\nEditQuestion.propTypes = {\n    editQuestion: PropTypes.func.isRequired,\n    question: PropTypes.object.isRequired,\n    onClose: PropTypes.func.isRequired,\n}\n\nexport default EditQuestion;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass DisplayResult extends Component {\n    showResult = () => {\n        this.props.showResult(this.props.answered);\n    }\n\n    render() {\n        return(\n            <div className=\"question\">\n                <h2 className=\"medium-heading\">{this.props.answered.name}</h2>\n                <p className=\"medium-text\">Email: {this.props.answered.email}</p>\n                <p className=\"medium-text\">Phone number: {this.props.answered.phone_number}</p>\n                <button onClick={this.showResult} className=\"small-button\">Show Result</button>\n            </div>\n        );\n    }\n}\n\nDisplayResult.propTypes = {\n    answered: PropTypes.object.isRequired,\n    showResult: PropTypes.func.isRequired\n};\n\nexport default DisplayResult;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DisplayResult from './DisplayResult';\n\nclass DisplayResults extends Component {\n    render() {\n        return this.props.answered.map((answered) => (\n            <DisplayResult answered={answered} key={answered.email} showResult={this.props.showResult}/>\n        ));\n    }\n}\n\nDisplayResults.propTypes = {\n    answered: PropTypes.array.isRequired,\n    showResult: PropTypes.func.isRequired,\n};\n\nexport default DisplayResults;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ShowResultQuestion extends Component {\n    showResult = () => {\n        this.props.showResult(this.props.answered);\n    }\n\n    render() {\n        return(\n            <div className=\"question\">\n                <h2 className=\"medium-heading\">{this.props.question.question}</h2>\n                <p className=\"medium-text\">Obtiznost: {this.props.question.difficulty}</p>\n                <p className=\"medium-text bolder\">Odpoved uzivatela: {this.props.question.user_answer}</p>\n                <p className=\"medium-text bolder\">Spravna odpoved: {this.props.question.correct_answer}</p>\n                <p className=\"medium-text bolder\">Spravne: {this.props.question.correct}</p>\n            </div>\n        );\n    }\n}\n\nShowResultQuestion.propTypes = {\n    question: PropTypes.object\n};\n\nexport default ShowResultQuestion;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ShowResultQuestion from './ShowResultQuestion';\n\nclass ShowResultQuestions extends Component {\n    render() {\n        return this.props.questions.map((question) => (\n            <ShowResultQuestion question={question} key={question.question}/>\n        ));\n    }\n}\n\nShowResultQuestions.propTypes = {\n    questions: PropTypes.array.isRequired,\n};\n\nexport default ShowResultQuestions;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ShowResultQuestions from './ShowResultQuestions';\n\nclass ShowResult extends Component {\n    state = {\n        questionsComponent: <ShowResultQuestions questions={this.props.answered.questions1}/>,\n        score: this.props.answered.score.score1,\n    }\n    questions1 = () => {\n        this.setState({\n            questionsComponent: <ShowResultQuestions questions={this.props.answered.questions1}/>,\n            score: this.props.answered.score.score1\n        });\n    }\n    questions2 = () => {\n        this.setState({\n            questionsComponent: <ShowResultQuestions questions={this.props.answered.questions2}/>,\n            score: this.props.answered.score.score2\n        });\n    }\n    questions3 = () => {\n        this.setState({\n            questionsComponent: <ShowResultQuestions questions={this.props.answered.questions3}/>,\n            score: this.props.answered.score.score3\n        });\n    }\n\n    render() {\n        return(\n            <div className=\"container-overlay\">\n                <div className=\"close-button\" onClick={this.props.onClose}>\n                    <div className=\"close-button-line1\"/>\n                    <div className=\"close-button-line2\"/>\n                </div>\n                <h1 className=\"medium-heading\">{this.props.answered.name}</h1>\n                <h3 className=\"small-heading\">{this.props.answered.email}</h3>\n                <h3 className=\"small-heading\">{this.props.answered.phone_number}</h3>\n                <div className=\"horizontal-container\">\n                    <button onClick={this.questions1} className=\"small-button\">Questions 1</button>\n                    <button onClick={this.questions2} className=\"small-button\">Questions 2</button>\n                    <button onClick={this.questions3} className=\"small-button\">Questions 3</button>\n                </div>\n                <h2 className=\"small-heading\">Score: {this.state.score * 100}%</h2>\n                {this.state.questionsComponent}\n            </div>\n        );\n    }\n}\n\nShowResult.propTypes = {\n    answered: PropTypes.object.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default ShowResult;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass CreatePrize extends Component {\n    state = {\n        prize_name: '',\n        prize_information: '',\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.createPrize(this.state.prize_name, this.state.prize_information);\n        this.setState({\n            prize_name: '',\n            prize_information: '',\n        });\n    }\n    \n    onChangeValue = (e) => this.setState({ [e.target.name]: e.target.value});\n\n    render() {\n        return(\n            <div className=\"container\">\n                <form className=\"form\" onSubmit={this.onSubmit}>\n                    <h1 className=\"medium-heading\">Create Prize</h1>\n                    <div className=\"input-line\">\n                            <input\n                            type=\"text\"\n                            name=\"prize_name\"\n                            className=\"text-input\"\n                            placeholder=\"Jmeno vyhry\"\n                            value={this.state.prize_name}\n                            onChange={this.onChangeValue}\n                            required\n                            />\n                    </div>\n                    <div className=\"input-line\">\n                        <textarea\n                        type=\"text\"\n                        name=\"prize_information\"\n                        className=\"text-input\"\n                        placeholder=\"Popis vyhry\"\n                        value={this.state.prize_information}\n                        onChange={this.onChangeValue}\n                        required\n                        />\n                    </div>\n                    <input\n                        type=\"submit\"\n                        name=\"submit\"\n                        className=\"medium-button\"\n                        value=\"Pridat\"\n                        required\n                    />\n                </form>\n            </div>\n        );\n    }\n}\n\nCreatePrize.propTypes = {\n    createPrize: PropTypes.func.isRequired,\n}\n\nexport default CreatePrize;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass DisplayPrize extends Component {\n    showResult = () => {\n        this.props.showResult(this.props.answered);\n    }\n\n    onEdit = () => {\n        this.props.onEdit(this.props.prize);\n    }\n\n    onDelete = () => {\n        this.props.onDelete(this.props.prize.id)\n    }\n\n    render() {\n        return(\n            <div className=\"question\">\n                <h2 className=\"medium-heading\">Vyhra: {this.props.prize.prize_name}</h2>\n                <p className=\"medium-text\">Popis vyhry: {this.props.prize.prize_information}</p>\n                <button className=\"small-button\" onClick={this.onEdit}>Edit</button>\n                <button className=\"small-button\" onClick={this.onDelete}>Delete</button>\n            </div>\n        );\n    }\n}\n\nDisplayPrize.propTypes = {\n    prize: PropTypes.object.isRequired,\n    onEdit: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired\n};\n\nexport default DisplayPrize;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DisplayPrize from './DisplayPrize';\n\nclass DisplayPrizes extends Component {\n    render() {\n        return this.props.prizes.map((prize) => (\n            <DisplayPrize prize={prize} key={prize.id} onEdit={this.props.onEdit} onDelete={this.props.onDelete}/>\n        ));\n    }\n}\n\nDisplayPrizes.propTypes = {\n    prizes: PropTypes.array.isRequired,\n    onEdit: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired\n};\n\nexport default DisplayPrizes;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditPrize extends Component {\n    state = {\n        prize_name: '',\n        prize_information: '',\n    }\n\n    componentDidMount() {\n        this.setState({\n            prize_name: this.props.prize.prize_name,\n            prize_information: this.props.prize.prize_information\n        });\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.editPrize(this.state.prize_name, this.state.prize_information, this.props.prize.id);\n        this.setState({\n            prize_name: '',\n            prize_information: ''\n        });\n    }\n    \n    onChangeValue = (e) => this.setState({ [e.target.name]: e.target.value});\n\n    render() {\n        return(\n            <div className=\"container-overlay\">\n                <div className=\"close-button\" onClick={this.props.onClose}>\n                    <div className=\"close-button-line1\"/>\n                    <div className=\"close-button-line2\"/>\n                </div>\n                <form className=\"form\" onSubmit={this.onSubmit}>\n                    <h1>Edit Prize</h1>\n                    <div className=\"input-line\">\n                            <input\n                            type=\"text\"\n                            name=\"prize_name\"\n                            className=\"text-input\"\n                            placeholder=\"Jmeno vyhry\"\n                            value={this.state.prize_name}\n                            onChange={this.onChangeValue}\n                            required\n                            />\n                    </div>\n                    <div className=\"input-line\">\n                        <textarea\n                        type=\"text\"\n                        name=\"prize_information\"\n                        className=\"text-input\"\n                        placeholder=\"Popis vyhry\"\n                        value={this.state.prize_information}\n                        onChange={this.onChangeValue}\n                        required\n                        />\n                    </div>\n                    <input\n                        type=\"submit\"\n                        name=\"submit\"\n                        className=\"medium-button\"\n                        value=\"Pridat\"\n                        required\n                    />\n                </form>\n            </div>\n        );\n    }\n}\n\nEditPrize.propTypes = {\n    editPrize: PropTypes.func.isRequired,\n    prize: PropTypes.object.isRequired,\n    onClose: PropTypes.func.isRequired,\n}\n\nexport default EditPrize;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport AdminPageQuestions from './AdminPageQuestions';\nimport CreateQuestion from './CreateQuestion';\nimport EditQuestion from './EditQuestion';\nimport DisplayResults from './DisplayResults';\nimport ShowResult from './ShowResult';\nimport CreatePrize from './CreatePrize';\nimport DisplayPrizes from './DisplayPrizes';\nimport EditPrize from './EditPrize';\nimport Config from '../Config'\n\nclass AdminPage extends Component {\n    state = {\n        errorMessage: '',\n        token: Config.token,\n        editComponent: '',\n        showResult: false,\n        showResultComponent: '',\n        showResults: false,\n        showPrizes: false,\n        showQuestions: true,\n        showCreateQuestion: false,\n        showCreatePrize: false,\n    }\n    addQuestion = (question, difficulty, correct_answer, a2, a3, a4) => {\n        axios.post(\"http://192.46.233.86:5000/admin\", {question, difficulty, correct_answer, a2, a3, a4, token: this.state.token});\n        //this.props.updateState();\n    }\n\n    addPrize = (name, information) => {\n        axios.put(\"http://192.46.233.86:5000/prizes\", {name, information, token: this.state.token});\n        //this.props.updateState();\n    }\n\n    onEditQuestion = (question) => {\n        this.setState({\n            editComponent: <EditQuestion question={question} editQuestion={this.editQuestion} onClose={this.onCloseEdit} />,\n        });\n    }\n\n    editQuestion = (question, difficulty, correct_answer, a2, a3, a4, id) => {\n        this.setState({\n            editComponent: '',\n        });\n        axios.put(\"http://192.46.233.86:5000/admin\", {question, difficulty, correct_answer, a2, a3, a4, id, token: this.state.token});\n        //this.props.updateState();\n    }\n\n    onEditPrize = (prize) => {\n        this.setState({\n            editComponent: <EditPrize prize={prize} editPrize={this.editPrize} onClose={this.onCloseEdit} />,\n        });\n    }\n\n    editPrize = (name, information, id) => {\n        this.setState({\n            editComponent: '',\n        });\n        axios.patch(\"http://192.46.233.86:5000/prizes\", {name, information, id: id, token: this.state.token}).then((res) => console.log(res));\n        //this.props.updateState();\n    }\n\n    onDeletePrize = (prize_id) => {\n        axios.delete(\"http://192.46.233.86:5000/prizes\", {params: {id: prize_id, token: this.state.token}});\n        //this.props.updateState();\n    }\n\n    onDeleteQuestion = (question_id) => {\n        axios.delete(\"http://192.46.233.86:5000/admin\", {params: {id: question_id, token: this.state.token}});\n        //this.props.updateState();\n    }\n\n    onCloseEdit = () => {\n        this.setState({\n            editComponent: '',\n        });\n    }\n\n    showResult = (answered) => {\n        this.setState({\n            showResult: true,\n            showResultComponent: <ShowResult answered={answered} onClose={this.onClose} />,\n        });\n    }\n\n    onClose = () => {\n        this.setState({showResult: false});\n    }\n\n    showResults = () => {\n        this.setState({\n            showResults: true,\n            showPrizes: false,\n            showQuestions: false,\n            showResult: false,\n            showCreateQuestion: false,\n            showCreatePrize: false,\n        });\n    }\n\n    showQuestions = () => {\n        this.setState({\n            showResults: false,\n            showPrizes: false,\n            showQuestions: true,\n            showResult: false,\n            showCreateQuestion: false,\n            showCreatePrize: false,\n        });\n    }\n\n    showPrizes = () => {\n        this.setState({\n            showResults: false,\n            showPrizes: true,\n            showQuestions: false,\n            showResult: false,\n            showCreateQuestion: false,\n            showCreatePrize: false,\n        });\n    }\n\n    showCreateQuestion = () => {\n        this.setState({\n            showResults: false,\n            showPrizes: false,\n            showQuestions: false,\n            showResult: false,\n            showCreateQuestion: true,\n            showCreatePrize: false,\n        });\n    }\n\n    showCreatePrize = () => {\n        this.setState({\n            showResults: false,\n            showPrizes: false,\n            showQuestions: false,\n            showResult: false,\n            showCreateQuestion: false,\n            showCreatePrize: true,\n        });\n    }\n\n    render() {\n        let component;\n        if (this.state.showResult) {\n            component = this.state.showResultComponent;\n        } else if (this.state.showResults) {\n            component = <DisplayResults answered={this.props.answered} showResult={this.showResult}/>;\n        } else if (this.state.showPrizes) {\n            component = <DisplayPrizes prizes={this.props.prizes} onEdit={this.onEditPrize} onDelete={this.onDeletePrize}/>;\n        } else if (this.state.showQuestions) {\n            component = <AdminPageQuestions questions={this.props.questions} onEdit={this.onEditQuestion} onDelete={this.onDeleteQuestion}/>;\n        } else if (this.state.showCreateQuestion){\n            component = <CreateQuestion createQuestion={this.addQuestion} />;\n        } else if (this.state.showCreatePrize) {\n            component = <CreatePrize createPrize={this.addPrize} />;\n        } else {\n            component = <h1>Everything is fucked up and IT DOESN'T WORK</h1>\n        }\n        return (\n            <div className=\"container\">\n                <div className=\"admin-page-menu\">\n                    <button onClick={this.showQuestions} className=\"medium-button\">Show Questions</button>\n                    <button onClick={this.showResults} className=\"medium-button\">Show Results</button>\n                    <button onClick={this.showPrizes} className=\"medium-button\">Show Prizes</button>\n                    <button onClick={this.showCreateQuestion} className=\"medium-button\">Create Question</button>\n                    <button onClick={this.showCreatePrize} className=\"medium-button\">Create Prize</button>\n                </div>\n                <div className=\"component\">{component}</div>\n                {this.state.editComponent}\n            </div>\n        );\n    }\n}\n\nAdminPage.propTypes = {\n    questions: PropTypes.array.isRequired,\n    answered: PropTypes.array.isRequired,\n    prizes: PropTypes.array.isRequired,\n    updateState: PropTypes.func.isRequired\n}\n\nexport default AdminPage;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport AdminLogin from './AdminLogin';\nimport AdminPage from './AdminPage';\nimport Config from '../Config';\n//import PropTypes from 'prop-types';\n\nclass Admin extends Component {\n    state = {\n        loggedIn: false,\n        token: Config.token,\n        res_questions: '',\n        res_answered: '',\n        res_prizes: ''\n    };\n\n    componentDidMount() {\n        axios.get(\"http://192.46.233.86:5000/admin\", {params: {token: this.state.token}})\n            .then(res => this.setState({res_questions: res.data.questions, res_answered: res.data.answered, res_prizes: res.data.prizes}));\n    }\n\n    updateState = () => {\n        axios.get(\"http://192.46.233.86:5000/admin\", {params: {token: this.state.token}})\n            .then(res => this.setState({res_questions: res.data.questions, res_answered: res.data.answered, res_prizes: res.data.prizes}));\n    }\n    login = (email, password) => {\n        axios.post(\"http://192.46.233.86:5000/validate_admin\", {email: email, password: password, token: this.state.token})\n            .then(res => {\n                if (res.data.message === \"login approved\") {\n                    this.setState({loggedIn: true});\n                } else {\n                    window.location.replace(\"/admin_wrong_credentials\")\n                }\n            })\n    }\n\n    render() {\n        let component;\n        if (this.state.loggedIn){\n            component = <AdminPage questions={this.state.res_questions} answered={this.state.res_answered} prizes={this.state.res_prizes} updateState={this.updateState}/>\n        } else {\n            component = <AdminLogin loginFunction={this.login}/>\n        }\n        return (\n            <div className=\"container\">\n                {component}\n            </div>\n        );\n        \n    }\n}\n\nexport default Admin;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport './App.css';\nimport GreatWar from './components/assets/GreatWar.mp3'\nimport GreatWarOgg from './components/assets/GreatWarOgg.ogg';\nimport Register from './components/Register';\nimport EmailExists from './components/EmailExists';\nimport Admin from './components/admin/Admin';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faVolumeUp } from '@fortawesome/free-solid-svg-icons'\n\nclass App extends Component {\n  playAudio = () => {\n    const audio = document.getElementById(\"track\");\n    if(audio.paused) {\n      audio.play();\n    } else {\n      audio.pause()\n    }\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"app\">\n          <div className=\"menu\">\n            <h1><a href=\"/\">Quiz Hana</a></h1>\n          </div>\n          <Route\n          exact\n          path=\"/\"\n          render={props =>(\n            <React.Fragment>\n              <div className=\"container-center\">\n                <h1 className=\"medium-heading\">Hana Hegerova quizzzzzz</h1>\n                <a href=\"/quiz\" className=\"large-button\">Play</a>\n              </div>\n            </React.Fragment>\n          )}\n          />\n          <Route\n          exact\n          path=\"/quiz\"\n          component={Register}\n          />\n          <Route\n          exact\n          path=\"/email_exists\"\n          component={EmailExists}\n          />\n          <Route\n          exact\n          path=\"/admin\"\n          component={Admin}\n          />\n          <Route\n          exact\n          path=\"/admin_wrong_credentials\"\n          component={Admin} // TODO create component for it with redirect button\n          />\n          <audio id=\"track\" loop>  \n            <source src={GreatWar} type=\"audio/mpeg\"/>\n            <source src={GreatWarOgg} type=\"audio/ogg\"/>\n          </audio>\n          <FontAwesomeIcon className=\"audio-button\" onClick={this.playAudio} icon={faVolumeUp} />\n        </div>\n      </Router>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}